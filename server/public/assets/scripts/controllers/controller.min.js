/*! personalprojectv1 2015-11-29 */
myApp.controller("loginController",["$scope","$http","GAuth","$location",function(a,b,c,d){a.googleLogin=function(){console.log("click"),c.login().then(function(){d.path("/playerAttendance")})}}]),myApp.controller("attendanceController",["$scope","$http","ManagerService",function(a,b,c){a.gridOptions1={},a.gridOptions2={}}]),myApp.controller("inputTeamController",["$scope","$http","ManagerService","GAuth",function(a,b,c,d){a.newPlayer={},a.playerArray=[],a.gridOptions={},a.managerService=c,a.settings=[],a.roster={roster:!1},a.gridOptions={columnDefs:[{field:"name",name:"Name"},{field:"email",name:"Email"},{field:"type",name:"Type"},{name:"edit",displayName:"Edit",cellTemplate:'<button id="editBtn" type="button" class="btn-small" ng-click="grid.appScope.editPlayer(row.entity)" >Edit</button> '},{name:"delete",displayName:"Delete",cellTemplate:'<button id="deleteBtn" type="button" class="btn-small" ng-click="grid.appScope.deletePlayer(row.entity)">Delete</button> '},{field:"_v",visible:!1},{field:"_id",visible:!1},{field:"$$hashkey",visible:!1}]},a.inputPlayer=function(c){b.post("/team/roster",c).then(function(b){console.log(b),a.refreshGrid()})},a.refreshGrid=function(){a.managerService.retrieveTeam().then(function(){a.playerArray=a.managerService.displayTeam(),a.gridOptions.data=a.playerArray})},a.deletePlayer=function(c){console.log(c),b.post("/team/delete",c).then(function(b){console.log(b),a.refreshGrid()})},a.editPlayer=function(a){console.log(a)},a.rosterComplete=function(){a.roster.roster=!0,a.managerService.inputSetting(a.roster),a.settings=a.managerService.retrieveSetting(),console.log("scope.settings in the roster, ",a.settings)},a.refreshGrid()}]),myApp.controller("inputScheduleController",["$scope","$http","GApi","moment","ManagerService","$filter",function(a,b,c,d,e,f){a.gridOptions={},a.newGame={},a.newCalendar={},a.currentCalendars={},a.managerService=e,a.playerArray=[],a.playerEmails=[],a.selectedCalendar={},a.settings=[],a.schedule={schedule:!1},a.gridOptions={columnDefs:[{field:"summary",name:"Event"},{field:"date",name:"Date"},{field:"start",name:"Time"},{field:"location",name:"Location"}]},a.event={calendarId:"vmte39c86sbcmh9fqr58iglsuo@group.calendar.google.com",summary:"newGame",description:"a test",start:{dateTime:"2015-12-11T22:00:00Z"},end:{dateTime:"2015-12-11T23:00:00Z"},attendees:[{email:"pazimmel@gmail.com"},{email:"stephbealee@gmail.com"}]},a.getEmailAddresses=function(){a.managerService.retrieveTeam().then(function(){a.playerArray=a.managerService.displayTeam();for(var b=0;b<a.playerArray.length;b++)a.playerEmails.push({email:a.playerArray[b].email})})},a.getCalendars=function(){a.managerService.retrieveCalendar().then(function(){return a.currentCalendars=a.managerService.displayCalendar(),console.log("result from getCalendars, ",a.currentCalendars),console.log("currentCalendars id, ",a.currentCalendars[0].id),a.currentCalendars})},a.getEvents=function(b){c.executeAuth("calendar","events.list",{calendarId:b.id}).then(function(b){console.log("resp.items ",b.items),a.gridOptions.data=b.items;for(var c=0;c<a.gridOptions.data.length;c++)a.gridOptions.data[c].date=f("date")(a.gridOptions.data[c].start.dateTime,"EEE, MMM d"),a.gridOptions.data[c].start=f("date")(a.gridOptions.data[c].start.dateTime,"shortTime");return console.log("gridpOptions.data ",a.gridOptions.data),a.gridOptions.data})},a.createCalendar=function(){c.executeAuth("calendar","calendars.insert",a.newCalendar).then(function(b){return console.log("response from createCalendar, ",b),a.newCalendar.id=b.id,console.log(a.newCalendar),a.inputCalendar(),a.getCalendars(),a.newCalendar},function(){console.log("error")})},a.inputCalendar=function(){b.post("/team/calendar",a.newCalendar).then(function(b){return console.log("response from inputCalendar, ",b),a.newCalendar})},a.inputGame=function(b){console.log("currentCalendarsid in inputGame ",a.currentCalendars.id),a.event.calendarId=a.currentCalendars[0].id,a.event.attendees=a.playerEmails,a.event.location=a.newGame.location,a.event.start.dateTime=a.newGame.date,a.event.end.dateTime=d(a.newGame.date).add(1,"hours"),console.log(a.event),c.executeAuth("calendar","events.insert",a.event).then(function(c){return a.value=c,b},function(){console.log("error :(")})},a.scheduleComplete=function(){a.schedule.schedule=!0,a.managerService.inputSetting(a.schedule),a.settings=a.managerService.retrieveSetting(),console.log("scope.settings in the schedule, ",a.settings)},a.getCalendars(),a.getEmailAddresses()}]),myApp.controller("inputEmailSettingsController",["$scope","$http","$window",function(a,b,c){a.settings=[],a.email={email:!1},a.days=[0,1,2,3,4,5],a.reminders={team_first:5,team_second:2,attendance:2},a.calendarSettings={},a.inputEmailSettings=function(b){a.calendarSettings=b,a.calendarSettings.calendarId},a.setOfflineAccess=function(){console.log("click offlineAccess"),auth2.grantOfflineAccess({redirect_uri:"postmessage"}).then(a.signInCallback)},a.signInCallback=function(a){console.log(a.code),a.code?b({url:"/login",method:"POST",params:{code:a.code}}).then(function(a){console.log(a)}):console.log("there was an error")},a.emailSettingsComplete=function(){a.email.email=!0,a.managerService.inputSetting(a.email),a.settings=a.managerService.retrieveSetting(),console.log("scope.settings in the email, ",a.settings)},a.startSeason=function(){a.settings=a.managerService.retrieveSetting(),console.log(settings),settings.length<3&&c.alert("Hey there! You haven't completed setting up. Make sure you have clicked the appropriate 'Complete' button on each page")}}]);