/*! personalprojectv1 2015-12-06 */
myApp.controller("loginController",["$scope","$http","GAuth","$location",function(a,b,c,d){a.googleLogin=function(){console.log("click"),c.login().then(function(){d.path("/playerAttendance")})}}]),myApp.controller("NavController",["$scope","$location",function(a,b){a.isActive=function(a){return a===b.path()}}]),myApp.controller("attendanceController",["$scope","$http","ManagerService","GApi","$filter","uiGridConstants","moment",function(a,b,c,d,e,f,g){a.gridOptions1={},a.gridOptions2={},a.attendance={},a.schedule={},a.currentCalendars={},a.selectedCalendar={},a.selected={},a.eventsData=[],a.game={},a.game.subArray=[],a.game.subEmails=[],a.game.selectedGame={},a.updatedEvent={},a.managerService=c,a.gridOptions2={columnDefs:[{field:"start.dateTime",visible:!1,sort:{direction:f.ASC,priority:0}},{field:"summary",name:"Event",visible:!1},{field:"schedule_date",name:"Date"},{field:"display_start",name:"Time"},{field:"location",name:"Location"},{name:"attendance",displayName:"Attendance",cellTemplate:'<button id="attendanceBtn" type="button" class="btn-large" ng-model = "selected.game" ng-click="grid.appScope.getAttendance(row.entity)">attendance</button>'}]},a.getCalendars=function(){a.managerService.retrieveCalendar().then(function(){return a.currentCalendars=a.managerService.displayCalendar(),console.log("result from getCalendars, ",a.currentCalendars),console.log("currentCalendars id, ",a.currentCalendars[0].id),a.selectedCalendar.calendar||(a.selectedCalendar.calendar=a.currentCalendars[0],a.managerService.setCalendarId(a.selectedCalendar.calendar.id),a.getEvents(a.currentCalendars[0])),a.currentCalendars})},a.getEvents=function(b){console.log("in getEvents"),a.calendarToGet={calendarId:b.id,timeMin:(new Date).toISOString(),maxResults:20,singleEvents:!0,orderBy:"startTime"},d.executeAuth("calendar","events.list",a.calendarToGet).then(function(b){a.gridOptions2.data=b.items,console.log("gridOptions2.data ",a.gridOptions2.data);for(var c=0;c<a.gridOptions2.data.length;c++)a.gridOptions2.data[c].schedule_date=e("date")(a.gridOptions2.data[c].start.dateTime,"shortDate"),a.gridOptions2.data[c].display_date=e("date")(a.gridOptions2.data[c].start.dateTime,"EEEE, MMM d"),a.gridOptions2.data[c].display_start=e("date")(a.gridOptions2.data[c].start.dateTime,"shortTime");return a.selected.date||a.getAttendance(a.gridOptions2.data[0]),a.gridOptions2.data})},a.getAttendance=function(b){a.selected.display_date=b.display_date,a.selected.display_start=b.display_start,a.gridOptions1.data=b.attendees,a.game.selectedGame=b},a.inviteSubs=function(){console.log("calendar id ",a.selectedCalendar.calendar.id),console.log("event id ",a.game.selectedGame.id),d.executeAuth("calendar","events.get",{calendarId:a.selectedCalendar.calendar.id,eventId:a.game.selectedGame.id}).then(function(b){console.log("the event to add invites? ",b),a.game.retrievedGame=b,a.managerService.retrieveTeam().then(function(){a.game.rosterArray=a.managerService.displayTeam();for(var b=0;b<a.game.rosterArray.length;b++)"sub"==a.game.rosterArray[b].type&&(a.game.subEmails.push({email:a.game.rosterArray[b].email}),a.game.retrievedGame.attendees.push({email:a.game.rosterArray[b].email}));a.updatedEvent={calendarId:a.selectedCalendar.calendar.id,eventId:a.game.selectedGame.id,sendNotifications:!0,resource:{summary:"Game",description:"inviting subs",start:{dateTime:a.game.retrievedGame.start.dateTime},end:{dateTime:a.game.retrievedGame.end.dateTime},attendees:a.game.retrievedGame.attendees,location:a.game.retrievedGame.location}},d.executeAuth("calendar","events.update",a.updatedEvent).then(function(b){a.getEvents(a.selectedCalendar.calendar)},function(){console.log("error updating")})},function(){console.log("error getting")})})},a.getCalendars()}]),myApp.controller("inputTeamController",["$scope","$http","ManagerService","GAuth",function(a,b,c,d){a.newPlayer={},a.newPlayer.type="player",a.playerArray=[],a.gridOptions={},a.managerService=c,a.settings=[],a.ready={roster:!1},a.gridOptions={columnDefs:[{field:"name",name:"Name"},{field:"email",name:"Email"},{field:"type",name:"Type"},{name:"delete",displayName:"Delete",cellTemplate:'<button id="deleteBtn" type="button" class="btn-small" ng-click="grid.appScope.deletePlayer(row.entity)">Delete</button> '}]},a.inputPlayer=function(c){console.log("newPLayer ",c),b.post("/team/roster",c).then(function(b){console.log("teh response ",b),a.refreshGrid()})},a.refreshGrid=function(){a.managerService.retrieveTeam().then(function(){a.playerArray=a.managerService.displayTeam(),a.gridOptions.data=a.playerArray})},a.deletePlayer=function(c){console.log(c),b.post("/team/delete",c).then(function(b){console.log(b),a.refreshGrid()})},a.editPlayer=function(a){console.log(a)},a.rosterComplete=function(){a.ready.roster=!0,a.managerService.inputSetting(a.ready),a.settings=a.managerService.retrieveSetting(),console.log("scope.settings in the roster, ",a.settings)},a.refreshGrid()}]),myApp.controller("inputScheduleController",["$scope","$http","GApi","moment","ManagerService","$filter","uiGridConstants",function(a,b,c,d,e,f,g){a.gridOptions={},a.newGame={},a.newCalendar={},a.currentCalendars={},a.managerService=e,a.playerArray=[],a.playerEmails=[],a.selectedCalendar={},a.settings=[],a.ready={schedule:!1},a.gridOptions={columnDefs:[{field:"start.dateTime",visible:!1,sort:{direction:g.ASC,priority:0}},{field:"summary",name:"Event"},{field:"display_date",name:"Date"},{field:"display_start",name:"Time"},{field:"location",name:"Location"},{name:"delete",displayName:"Delete",cellTemplate:'<button id="deleteBtn" type="button" class="btn-small" ng-click="grid.appScope.deleteEvent(row.entity)">Delete</button> '}]},a.event={summary:"Game",sendNotifications:!0,description:"a test",start:{dateTime:"2015-12-11T22:00:00Z"},end:{dateTime:"2015-12-11T23:00:00Z"},attendees:[{email:"pazimmel@gmail.com"},{email:"stephbealee@gmail.com"}]},a.getEmailAddresses=function(){a.managerService.retrieveTeam().then(function(){a.playerArray=a.managerService.displayTeam();for(var b=0;b<a.playerArray.length;b++)"player"===a.playerArray[b].type&&a.playerEmails.push({email:a.playerArray[b].email})})},a.getCalendars=function(){a.managerService.retrieveCalendar().then(function(){return a.currentCalendars=a.managerService.displayCalendar(),a.currentCalendars})},a.getEvents=function(b){c.executeAuth("calendar","events.list",{calendarId:b.id}).then(function(b){a.managerService.setCalendarId(a.selectedCalendar.calendar.id),a.gridOptions.data=b.items;for(var c=0;c<a.gridOptions.data.length;c++)a.gridOptions.data[c].display_date=f("date")(a.gridOptions.data[c].start.dateTime,"EEEE, MMM d"),a.gridOptions.data[c].display_start=f("date")(a.gridOptions.data[c].start.dateTime,"shortTime");return a.gridOptions.data})},a.createCalendar=function(){c.executeAuth("calendar","calendars.insert",a.newCalendar).then(function(b){return console.log("response from createCalendar, ",b),a.newCalendar.id=b.id,console.log(a.newCalendar),a.inputCalendar(),a.getCalendars(),a.newCalendar},function(){console.log("error")})},a.inputCalendar=function(){b.post("/team/calendar",a.newCalendar).then(function(b){return console.log("response from inputCalendar, ",b),a.newCalendar})},a.inputGame=function(b){console.log("currentCalendarsid in inputGame ",a.currentCalendars.id),a.selectedCalendar.calendar?a.event.calendarId=a.selectedCalendar.calendar.id:a.event.calendarId=a.currentCalendars[0].id,a.event.attendees=a.playerEmails,a.event.location=a.newGame.location,a.event.start.dateTime=a.newGame.date,a.event.end.dateTime=d(a.newGame.date).add(1,"hours"),console.log(a.event),c.executeAuth("calendar","events.insert",a.event).then(function(c){return a.value=c,a.getEvents(a.selectedCalendar.calendar),b},function(){console.log("error :(")})},a.deleteEvent=function(b){console.log(b),a.delEvent={calendarId:a.selectedCalendar.calendar.id,eventId:b.id},c.executeAuth("calendar","events.delete",a.delEvent).then(function(b){return console.log(b),a.getEvents(a.selectedCalendar.calendar),b},function(){console.log("error")})},a.scheduleComplete=function(){a.ready.schedule=!0,a.managerService.inputSetting(a.ready),a.settings=a.managerService.retrieveSetting(),console.log("scope.settings in the schedule, ",a.settings)},a.getCalendars(),a.getEmailAddresses()}]),myApp.controller("inputEmailSettingsController",["$scope","$http","$window","ManagerService","GApi",function(a,b,c,d,e){a.settings=[],a.ready={email:!1},a.days=[0,1,2,3,4,5],a.reminders={first_reminder:5,second_reminder:2,attendance_reminder:2},a.calendarSettings={},a.managerService=d,a.inputEmailSettings=function(b){a.calendarSettings=b,a.calendarSettings.calendarId=a.managerService.getCalendarId(),console.log(a.calendarSettings),a.updateEmailSettings(),a.emailSettingsComplete(),console.log("end of emailSettings")},a.getEmailSettings=function(){b.get("team/reminder/init").then(function(b){console.log(b.data[0]),b.data[0]?a.reminders=b.data[0]:a.initEmailSettings(a.reminders)})},a.initEmailSettings=function(c){a.calendarSettings=c,console.log("the settings ",c),console.log("managerService.getCalendarId ",a.managerService.getCalendarId()),a.calendarSettings.calendarId=a.managerService.getCalendarId(),b.post("/team/reminder/init",a.calendarSettings).then(function(b){return console.log("initializing the email settings, ",b),a.calendarSettings},function(){console.log("error")})},a.updateEmailSettings=function(){b.post("/team/reminder/update",a.calendarSettings).then(function(b){return console.log("email settings updated :",b),a.calendarSettings},function(){console.log("error")})},a.setOfflineAccess=function(){return console.log("click offlineAccess"),auth2.grantOfflineAccess({redirect_uri:"postmessage"}).then(a.signInCallback),!0},a.signInCallback=function(a){return console.log(a.code),a.code?void b({url:"/login",method:"POST",params:{code:a.code}}).then(function(a){return console.log(a),a}):(console.log("there was an error"),!1)},a.emailSettingsComplete=function(){a.ready.email=!0,a.managerService.inputSetting(a.ready),a.settings=a.managerService.retrieveSetting(),console.log("scope.settings in the email, ",a.settings)},a.startSeason=function(){a.settings=a.managerService.retrieveSetting(),console.log(a.settings),a.settings.length<3&&c.alert("Hey there! You haven't completed setting up. Make sure you have clicked the appropriate 'Complete' button on each page")},a.getEmailSettings()}]);